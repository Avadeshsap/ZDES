managed implementation in class zbp_des_travel_i unique;
strict ( 2 ); // this ensure we are follwing strict syntax

define behavior for ZDES_TRAVEL_I alias Travel
persistent table zdes_travel
lock master
authorization master ( global,instance )
etag master LocalLastChangedAt   // system detect the latest timestamp and  prevent overwrite
{
  create;  // users can create new travels
  update;  // users can update or edit the existing travels
  delete;  // users can cancel / delete the entrire travel ( incluing its child booking and booksuppl)
  field(numbering : managed,readonly)TravelUuid; // non editable field on the fiori screen
  association _Booking { create; } //users can do the bookings to the current travel


 // Do mapping between CDS entity Alias names and Data base level fields
 mapping for zdes_travel
 {
   // cds entity ALIAS name LHS = Database level feild name RHS
    TravelUuid = travel_uuid;
    TravelId = travel_id;
    AgencyId = agency_id;
    CustomerId = customer_id;
    BeginDate = begin_date;
    EndDate = end_date;
    BookingFee = booking_fee;
    TotalPrice = total_price;
    CurrencyCode = currency_code;
    Description = description;
    OverallStatus = overall_status;
    LocalCreatedBy = local_created_by;
    LocalCreatedAt = local_created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt = last_changed_at;

 }


}



define behavior for ZDES_BOOKING_I alias Booking
persistent table zdes_booking
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update; // user can update or edit the booking once they inside the travel instance
  delete; // user can delete/cancel the Booking and its child Booking suppl
  field (readonly) TravelUuid;
  field ( numbering : managed, readonly ) BookingUuid; // this one also generate by RAP framework and it is non editable
  association _Travel{ }
  association _BookingSupplement { create; } //users can do the booking suppl to the current booking under the travel



  mapping for ZDES_BOOKING
  // Do mapping between CDS entity Alias names and Data base level fields
  {

    BookingUuid = booking_uuid;
    TravelUUID = parent_uuid;
    BookingId = booking_id;
    BookingDate = booking_date;
    CustomerId = customer_id;
    CarrierId = carrier_id;
    ConnectionId = connection_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    CurrencyCode = currency_code;
    BookingStatus = booking_status;
    LocalLastChangedAt = local_last_changed_at;
  }

}



define behavior for ZDES_BKSUPPL_I //alias <alias_name>
persistent table zdes_bksuppl
lock dependent by _Travel
authorization dependent by _Travel
//etag master <field_name>
{
  update;
  delete;
  field ( readonly ) BooksupplUuid;
  field (readonly) BookingUUID ,TravelUUID;
  association _Travel;
  association _Booking;
}